rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
  //function for updates to requests
  function updateRequests() {
  	return resource.data.client_id == request.auth.uid || 
    (
     resource.data.vendor_id == "" &&
     resource.data.status == 'pending' &&
     request.resource.data.attachments == resource.data.attachments &&
     request.resource.data.citation == resource.data.citation &&
     request.resource.data.client_id == resource.data.client_id &&
     request.resource.data.created_at == resource.data.created_at &&
     request.resource.data.label == resource.data.label &&
     request.resource.data.pages == resource.data.pages &&
     request.resource.data.pricing == resource.data.pricing &&
     request.resource.data.repository == resource.data.repository &&
     request.resource.data.repository_id == resource.data.repository_id
    ) ||
    (
     resource.data.vendor_id == request.auth.uid &&
     request.resource.data.citation == resource.data.citation &&
     request.resource.data.client_id == resource.data.client_id &&
     request.resource.data.created_at == resource.data.created_at &&
     request.resource.data.label == resource.data.label &&
     request.resource.data.pages == resource.data.pages &&
     request.resource.data.pricing == resource.data.pricing &&
     request.resource.data.repository == resource.data.repository &&
     request.resource.data.repository_id == resource.data.repository_id
    )
     
  }
  
  //areas
    match /areas/{area} {
      allow read: if request.auth != null;
      allow write: if false;
    }
  
  //feedback
  	match /feedback/{document} {
    	allow create: if request.auth != null;
      allow read, update, delete: if false;
    }
    
  //repositories
  	match /repositories/{repository} {
    		allow read: if request.auth != null;
        allow write: if false;
    }
  
  //requests
  	match /requests/{document} {
    		allow create, read: if request.auth != null;
        allow update: if updateRequests()
        allow delete: if resource.data.client_id == request.auth.uid
    }
  
  //user-meta
  	match /user-meta/{userId} {
    	allow create: if request.auth != null;
      allow read, update: if request.auth.uid == userId;
      allow delete: if false;
    }
  }
}